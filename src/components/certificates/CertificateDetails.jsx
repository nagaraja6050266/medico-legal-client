import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { getCertificateById } from "../../api/certificateApi";
import { jsPDF } from "jspdf";
import "bootstrap/dist/css/bootstrap.min.css";

function CertificateDetails() {
    const { certificateId } = useParams();
    const navigate = useNavigate();
    const [certificate, setCertificate] = useState(null);

    useEffect(() => {
        const fetchCertificate = async () => {
            const data = await getCertificateById(certificateId);
            setCertificate(data);
        };
        fetchCertificate();
    }, [certificateId]);

    const generatePDF = () => {
        const doc = new jsPDF();

        // Add title and styling
        doc.setFont("helvetica", "bold");
        doc.setFontSize(18);
        doc.text("Certificate Details", 105, 20, null, null, "center");

        // Add a border
        doc.setLineWidth(0.5);
        doc.rect(10, 30, 190, 240);

        // Add certificate details
        doc.setFont("helvetica", "normal");
        doc.setFontSize(12);
        let yPosition = 40;

        const addDetail = (label, value) => {
            doc.setFont("helvetica", "bold");
            doc.text(`${label}:`, 20, yPosition);
            doc.setFont("helvetica", "normal");
            doc.text(value, 60, yPosition);
            yPosition += 10;
        };

        addDetail("ID", certificate.certificateId.toString());
        addDetail("Type", certificate.certificateType.typeName);
        addDetail("Description", certificate.certificateType.description);
        addDetail("Issued Date", certificate.issuedDate);
        addDetail("Expiry Date", certificate.expiryDate);
        addDetail("Patient Name", certificate.patient.name);
        addDetail("Contact", certificate.patient.contact);
        addDetail("Address", certificate.patient.address);

        // Add certificate-specific details
        doc.setFont("helvetica", "bold");
        doc.text("Certificate Details:", 20, yPosition);
        yPosition += 10;

        Object.entries(certificate.certificateDetails).forEach(
            ([key, value]) => {
                doc.setFont("helvetica", "normal");
                doc.text(
                    `${key
                        .replace(/([A-Z])/g, " $1")
                        .replace(/^./, (str) => str.toUpperCase())}: ${value}`,
                    20,
                    yPosition
                );
                yPosition += 10;
            }
        );

        // Footer
        doc.setFont("helvetica", "italic");
        doc.setFontSize(10);
        doc.text(
            "Generated by Medico-Legal Web App",
            105,
            270,
            null,
            null,
            "center"
        );

        // Save the PDF
        doc.save("CertificateDetails.pdf");
    };

    if (!certificate) {
        return <div>Loading...</div>;
    }

    const renderCertificateDetails = () => {
        return Object.entries(certificate.certificateDetails).map(
            ([key, value]) => (
                <tr key={key}>
                    <td className="fw-bold">
                        {key
                            .replace(/([A-Z])/g, " $1")
                            .replace(/^./, (str) => str.toUpperCase())}
                    </td>
                    <td>{value}</td>
                </tr>
            )
        );
    };

    return (
        <div className="container mt-4">
            <h2 className="text-center mb-4">Certificate Details</h2>
            <div className="card p-4 shadow-sm">
                <table className="table table-bordered">
                    <tbody>
                        <tr>
                            <td className="fw-bold">ID</td>
                            <td>{certificate.certificateId}</td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Type</td>
                            <td>{certificate.certificateType.typeName}</td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Description</td>
                            <td>{certificate.certificateType.description}</td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Issued Date</td>
                            <td>{certificate.issuedDate}</td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Expiry Date</td>
                            <td>{certificate.expiryDate}</td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Patient</td>
                            <td>
                                <button
                                    className="btn btn-link p-0"
                                    onClick={() =>
                                        navigate(
                                            `/patients/${certificate.patient.patientId}`
                                        )
                                    }
                                >
                                    {certificate.patient.name}
                                </button>
                            </td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Contact</td>
                            <td>{certificate.patient.contact}</td>
                        </tr>
                        <tr>
                            <td className="fw-bold">Address</td>
                            <td>{certificate.patient.address}</td>
                        </tr>
                        {renderCertificateDetails()}
                    </tbody>
                </table>
                <div className="d-flex justify-content-between mt-4">
                    <a
                        href={certificate.filePath}
                        className="btn btn-primary"
                        download
                    >
                        Download Attachment
                    </a>
                    <button className="btn btn-secondary" onClick={generatePDF}>
                        Download PDF
                    </button>
                </div>
            </div>
        </div>
    );
}

export default CertificateDetails;
